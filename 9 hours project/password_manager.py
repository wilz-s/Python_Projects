from cryptography.fernet import Fernet
# This is a module that allows you to encrypt texts.
# It takes a string of text & using a key, turns in into a different, random string of text.
# You cannot get the original text without the key.

'''def write_key():
    key = Fernet.generate_key()
    # The key is generated by the imported module "Fernet".
    with open("key.key", "wb") as key_file:
        # the function will create a key file called "key.key" in "wb" mode(no need to know).
        key_file.write(key)'''

# #write_key()
# The function above is removed after use cos I have the key now for the master password.
# The code above it("def write_key") is commented out cos it has served it's purpose of creating a key.

def load_key():
    file = open("key.key", "rb")
    key = file.read()
    file.close()
    return
# This is to load the key we just got.


key = load_key()
# "encode" converts "master_pwd" into bytes.
fer = Fernet(key)
# adding "master_pwd" in it's bytes format to the key

def view():
# def is used when defining a function. A function is an executable, reusable block of code(in this case, "view()").
# how it works is if i added print("Tim") into the function, anytime "view()" function is used, print("Tim") is executed.
    with open('passwords.txt', 'r') as f:
        for line in f.readlines():
            data = (line.rstrip())
            # 'rstrip' will remove the '\n' in viewing mode.
            user, passw = data.split("|")
# ".split" looks for "|" and splits them into a list form.
# If "user" or "passw" had "|" in them or just more of it, we'd follow a different process.
            print("Username:", user, "| Password:", fer.decrypt(passw.encode()).decode())

# "pass" is a keyword that does nothing.
# Its temporarily used in the place of break or continue so there are no errors while the program is edited.

def add():
    name = input("Account Name: ")
    pwd = input("Password: ")

    with open('passwords.txt', 'a') as f:
        f.write(name + "|" + fer.encrypt(pwd.encode()).decode() + "\n")
'''
'with' is used to automatically close the opened file. There's other ways to open the file of course.
'a' is append mode, it allows you to add to the end of an existing file. If 'passwords.txt' doesn't exists, it will create it.
There's also 'r' which is simply read, no editing. opening a non existing file this mode is a problem.
Last, 'w' which creates a new file or overrides(replaces) an existing file.
These are the main modes but there are more.
"\n" tells the editor to go to the next line like the enter key.
The 'write' in 'f.write' should be self explanatory.
'''


while True:
    mode = input("Would you like to add a new password or view existing ones?: (add/view). Press q to quit ").lower()
    if mode == "q":
        break

    if mode == "view":
        view()
    elif mode == "add":
        add()
    else:
        print("Invalid mode.")
        continue